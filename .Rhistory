install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
devtools::install_github("alissonccs/spnhppzi@master", auth_token = "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")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
package_version("rstan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
rstan:::rstudio_stanc("inst/stan/BPNHPP_ZI_FRAT_18_01_2023.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ICAR_COV_FRAT_15_09.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_FRAT_09_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_LOGISTCOV_FRAT_28_04_2023.stan")
packageVersion("rstan")
remove.packages("rstan")
install.packages("rstan")
install.packages("rstan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_FRAT_09_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_26_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_26_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_FRAT_09_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_26_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
roxygen2::roxygenize()
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_FRAT_ZETA_21_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_05_11_2022.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_10_02_2022_tau_data.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_23_02_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_26_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_FRAT_05_11_2022.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_FRAT_09_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_FRAT_ZETA_21_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_05_11_2022.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_10_02_2022_tau_data.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_23_02_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_26_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_07_03_2023.stan")
rstan:::rstudio_stanc("inst/stan/BP_SPNHPP_ZI_FRAT_ZETA_26_03_2023.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
remove.packages("spnhppzi")
roxygen2::roxygenize()
rstan:::rstudio_stanc("inst/stan/SPNHPP_ZI_LOGISTCOV_FRAT_27_04_2023.stan")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
remove.packages("spnhppzi")
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
rlang::last_trace()
roxygen2::roxygenize()
library("rstantools")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
remove.packages("spnhppzi")
roxygen2::roxygenize()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
roxygen2::roxygenize()
library("rstantools")
roxygen2::roxygenize()
clear_caches()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
roxygen2::roxygenize()
clear_caches()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
library("spnhppzi")
library(spnhppzi)
?spnhppzi::spsimrec
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
devtools::document()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
install.packages("roxygen2", dependencies = TRUE)
install.packages("devtools", dependencies = TRUE)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
example(source)
sourceDir()
sourceDir(path = ".")
getwd()
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
library(spnhppzi)
?spnhppzi::spsimrec
?spnhppzi::Recur
?spnhppzi::spnhppzi
library(rstan)
library(Formula)
library(dplyr)
library(psych)
library(splitstackshape)
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
N<-500
alpha1_r<-0.5
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
pi_r<-0
fu.min<-7
fu.max<-7
lista<-c(1:10)
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
base<-spsimrec9(N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
# cov_log=c("X3","X4"),
beta_x_rec = c(beta1_r,beta2_r),
# beta_x_log = c(psi1_r,psi2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=0,
# list_area=list_area_RMBH,
# sp_model="ICAR",
# SP_N=100,
# nb_mat=RMBH_mat,
# sp_tau=sp_tau_r,
#sp_alpha=sp_alpha_r,
#beta.x = cov.fu$beta.x,
# dist_z = "lognormal",
random_ef=0,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
base<-spsimrec(N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
# cov_log=c("X3","X4"),
beta_x_rec = c(beta1_r,beta2_r),
# beta_x_log = c(psi1_r,psi2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=0,
# list_area=list_area_RMBH,
# sp_model="ICAR",
# SP_N=100,
# nb_mat=RMBH_mat,
# sp_tau=sp_tau_r,
#sp_alpha=sp_alpha_r,
#beta.x = cov.fu$beta.x,
# dist_z = "lognormal",
random_ef=0,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
formula2=Formula(spnhppzi::Recur1(time=end,event=status,id=ID,SP_ID=NULL,IndRec=IndRec)~X1+X2|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi4(formula2,
base,
baseline = "plp2",
FR="FALSE",
ZI="FALSE",
approach = "BAYES",
sp_model = "ICAR",
initial=1,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=4,
mu_psi=0,sigma_psi=4,
mu_omega=0,
# shp_sigma2_z =0.1, scl_sigma2_z =0.1,
spatial=0,
# nb_mat=RMBH_mat,
# shp_tau=1,
# scl_tau=1,
n_iter = 2000,
n_cores=1,
n_chains=2,
# W_n=284,
omega_data = 0
# bp_degree=degree_bp,
# h1_gamma=0,
# h2_gamma=1,
# lower_tau=0,
# tp_prior_tau="gamma",
# tp_icar = 1,
# std_dev = 1
# omega=omega_data$omega,
# tau=sp_tau_r,
# tp_DIC=1 #Usa Transformed parameters no lugar de calculed quantities
)
pars<- as.data.frame(RESULT_BAYES_SCOV1, pars = c("alpha"))
summary(RESULT_BAYES_SCOV1,pars=c("alpha","beta"))
roxygen2::roxygenize()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
git pull --rebase origin master
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
remove.packages("spnhppzi")
library("spnhppzi")
