roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
roxygen2::roxygenize()
roxygen2::roxygenize()
remove.packages("spnhppzi")
roxygen2::roxygenize()
roxygen2::roxygenize()
library("rstantools")
roxygen2::roxygenize()
clear_caches()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
roxygen2::roxygenize()
clear_caches()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
library("spnhppzi")
library(spnhppzi)
?spnhppzi::spsimrec
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
library("spnhppzi")
library(spnhppzi)
?spnhppzi::spsimrec
?spnhppzi::Recur
library(rstan)
library(Formula)
library(dplyr)
library(psych)
library(splitstackshape)
N<-500
alpha1_r<-0.5
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
pi_r<-0
fu.min<-7
fu.max<-7
lista<-c(1:10)
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
set.seed(NULL)
base<-spsimrec(N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
beta_x_rec = c(beta1_r,beta2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=0,
random_ef=0,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
formula2=Formula(spnhppzi::Recur1(time=end,event=status,id=ID,SP_ID=NULL,IndRec=IndRec)~X1+X2|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base,
baseline = "plp2",
FR="FALSE",
ZI="FALSE",
approach = "BAYES",
sp_model = "ICAR",
initial=1,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=4,
mu_psi=0,sigma_psi=4,
mu_omega=0,
spatial=0,
n_iter = 2000,
n_cores=2,
n_chains=2,
omega_data = 0
)
summary(RESULT_BAYES_SCOV1,pars=c("alpha","beta"))
model<-"Model 09 ICAR BP"
geo_level<-"Municipio + AP BH"
model_specif<-"Adj equal Gen"
N<-500
alpha1_r<-2
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
sp_tau_r<-1
psi1_r<-1.6
psi2_r<-1.2
pi_r<-0.75
fu.min<-7
fu.max<-7
degree_bp<-min(ceiling(N^0.4),5)
n_points_graf<-50
lista<-c(1:300)
# GERA COVARIÁVEIS ====
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
set.seed(NULL)
N<-500
alpha1_r<-2
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
sp_tau_r<-1
psi1_r<-1.6
psi2_r<-1.2
pi_r<-0.75
fu.min<-7
fu.max<-7
degree_bp<-min(ceiling(N^0.4),5)
n_points_graf<-50
# GERA COVARIÁVEIS ====
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
set.seed(NULL)
base_sp<-spsimrec (N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
beta_x_rec = c(beta1_r,beta2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=1,
list_area=list_area_RMBH,
sp_model="ICAR",
SP_N=133,
nb_mat=RMBH_mat,
sp_tau=sp_tau_r,
random_ef=1,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
N<-500
alpha1_r<-2
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
sp_tau_r<-1
psi1_r<-1.6
psi2_r<-1.2
pi_r<-0.75
fu.min<-7
fu.max<-7
degree_bp<-min(ceiling(N^0.4),5)
n_points_graf<-50
## TRATA DADOS GEOGRÁFICOS ----
## Lista de códigos dos municípios da região metropolitana ====
list_RMBH<-c(3106200,3154606,3118601,3106705,3157807)
## SHAPE REGIÃO METROPOLITANA DE BH ====
MUN_MG<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/MG_Municipios_2021')
library(sf)
## SHAPE REGIÃO METROPOLITANA DE BH ====
MUN_MG<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/MG_Municipios_2021')
## SHAPE REGIÃO METROPOLITANA DE BH ====
MUN_MG<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/MG_Municipios_2021')
#### Shape áreas de ponderação de BH ====
APBH<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/BELO HORIZONTE_area de ponderacao.shp')
APBH$NM_MUN<-"Belo Horizonte"
AP_CONT<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/CONTAGEM_area de ponderacao.shp')
AP_CONT$NM_MUN<-"Contagem"
AP_RIB<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/RIBEIRAO DAS NEVES_area de ponderacao.shp')
AP_RIB$NM_MUN<-"Ribeirão das Neves"
AP_ST_LUZIA<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/SANTA LUZIA_area de ponderacao.shp')
AP_ST_LUZIA$NM_MUN<-"Santa Luzia"
AP_BETIM<-st_read('/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/BETIM_area de ponderacao.shp')
AP_BETIM$NM_MUN<-"Betim"
AP<-rbind(APBH,AP_CONT,AP_RIB,AP_ST_LUZIA,AP_BETIM)
AP<-AP %>%
rename(CD_MUN=CD_APONDE) %>%
# mutate(NM_MUN="Belo Horizonte") %>%
dplyr::select(!c(Qt_Setores))
### Adiciona áreas de ponderação de BH ao shape da Região Metropolitana ====
RMBH2<-AP
RMBH2_sorted <- RMBH2[ order(as.numeric(RMBH2$CD_MUN)), ]
RMBH2_sorted$SP_ID<-seq(1:nrow(RMBH2_sorted))
RMBH_mat <- nb2mat(poly2nb(RMBH2_sorted), style = "B")
library(spdep)
library(MASS)
library(matlib)
AP<-rbind(APBH,AP_CONT,AP_RIB,AP_ST_LUZIA,AP_BETIM)
AP<-AP %>%
rename(CD_MUN=CD_APONDE) %>%
# mutate(NM_MUN="Belo Horizonte") %>%
dplyr::select(!c(Qt_Setores))
### Adiciona áreas de ponderação de BH ao shape da Região Metropolitana ====
RMBH2<-AP
RMBH2_sorted <- RMBH2[ order(as.numeric(RMBH2$CD_MUN)), ]
RMBH2_sorted$SP_ID<-seq(1:nrow(RMBH2_sorted))
RMBH_mat <- nb2mat(poly2nb(RMBH2_sorted), style = "B")
row.names(RMBH_mat)<-RMBH2_sorted$SP_ID
sum(RMBH_mat)/2
list_area_RMBH<-as.numeric(row.names(RMBH_mat))
RMBH2_INDICES<-(RMBH2_sorted) %>%
as.data.frame %>%
dplyr::select(c(SP_ID, CD_MUN,NM_MUN))
RMBH_mat <- nb2mat(poly2nb(RMBH2_sorted), style = "B")
row.names(RMBH_mat)<-RMBH2_sorted$SP_ID
sum(RMBH_mat)/2
list_area_RMBH<-as.numeric(row.names(RMBH_mat))
RMBH2_INDICES<-(RMBH2_sorted) %>%
as.data.frame %>%
dplyr::select(c(SP_ID, CD_MUN,NM_MUN))
list_area_RMBH
RMBH_mat
list_area_RMBH
typeof(RMBH_mat)
saveRDS(Adj_matrix,"/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/Adj_matrix.RDS"))
saveRDS(Adj_matrix,"/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/Adj_matrix.RDS")
Adj_matrix<-RMBH_mat
saveRDS(Adj_matrix,"/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/Adj_matrix.RDS")
Adj_matrix<-RMBH_mat
saveRDS(Adj_matrix,"/home/user/NOTE_DELL/alisson/UFMG/TESE/SIM/MALHAS/31_MG_Minas_Gerais/Adj_matrix.RDS")
# GERA COVARIÁVEIS ====
set.seed(5832)
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
set.seed(NULL)
base_sp<-spsimrec (N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
beta_x_rec = c(beta1_r,beta2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=1,
list_area=list_area_RMBH,
sp_model="ICAR",
SP_N=133,
nb_mat=Adj_matrix,
sp_tau=sp_tau_r,
random_ef=1,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
formula2=Formula(spnhppzi::Recur1(end,status,ID,SP_ID,IndRec)~X1+X2|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi4(formula2,
base_sp,
baseline = "bp",
FR="TRUE",
ZI="TRUE",
approach = "BAYES",
sp_model = "ICAR",
initial=1,
tp_prior=1,
mu_beta=0,sigma_beta=4,
mu_psi=0,sigma_psi=4,
mu_omega=0,
spatial=1,
nb_mat=RMBH_mat,
shp_tau=0.01,
scl_tau=0.01,
n_iter = 2000,
n_cores=1,
n_chains=2,
W_n=365,omega_data = 0,
bp_degree=degree_bp,
h1_gamma=0,
h2_gamma=4,
lower_tau=0,
tp_prior_tau="gamma",
tp_icar = 1,
std_dev = 1
)
formula2=Formula(spnhppzi::Recur1(end,status,ID,SP_ID,IndRec)~X1+X2|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base_sp,
baseline = "bp",
FR="TRUE",
ZI="TRUE",
approach = "BAYES",
sp_model = "ICAR",
initial=1,
tp_prior=1,
mu_beta=0,sigma_beta=4,
mu_psi=0,sigma_psi=4,
mu_omega=0,
spatial=1,
nb_mat=RMBH_mat,
shp_tau=0.01,
scl_tau=0.01,
n_iter = 2000,
n_cores=1,
n_chains=2,
W_n=365,omega_data = 0,
bp_degree=degree_bp,
h1_gamma=0,
h2_gamma=4,
lower_tau=0,
tp_prior_tau="gamma",
tp_icar = 1,
std_dev = 1
)
RESULT<-RESULT_BAYES_SCOV1
# set.seed(NULL)
# pars<- as.data.frame(RESULT_BAYES_SCOV1$result_stan, pars = c("alpha","beta","pii","tau"))
pars_desc<-summary(RESULT$result_stan, pars = c("alpha","beta","pii","tau"))
pars_desc<-pars_desc$summary
pars_desc
set.seed(NULL)
N<-500
alpha1_r<-2
alpha2_r<-1.3
beta1_r<-0.6
beta2_r<-0.8
sp_tau_r<-1
psi1_r<-1.6
psi2_r<-1.2
pi_r<-0.75
fu.min<-7
fu.max<-7
degree_bp<-min(ceiling(N^0.4),5)
n_points_graf<-50
cov.fu<-gencovfu2(N=N,
fu.min=fu.min,
fu.max=fu.max,
cens.prob = 0,
dist.x = c("binomial","normal"),
par.x=list(0.7, c(0, 1)),
beta.x=c(beta1_r, beta2_r)
)
set.seed(NULL)
base_sp<-spsimrec (N=cov.fu$N,
cov_rec=c("ID","X1","X2"),
beta_x_rec = c(beta1_r,beta2_r),
logist = 0,
x1 = cov.fu$x1,
fu = cov.fu$fu,
fu_max = cov.fu$fu.max,
fu_min = cov.fu$fu.min,
spatial=1,
list_area=list_area_RMBH,
sp_model="ICAR",
SP_N=133,
nb_mat=Adj_matrix,
sp_tau=sp_tau_r,
random_ef=1,
tp_rnd_ef=0,
pi = pi_r,
par_z=0,
dist_int_func = "weibull",
par_int_func = c(alpha1_r,alpha2_r),
baseline="plp2"
)
formula2=Formula(spnhppzi::Recur1(end,status,ID,SP_ID,IndRec)~X1+X2|-1)
RESULT<- spnhppzi::spnhppzi(formula2,
base_sp,
baseline = "bp",
FR="TRUE",
ZI="TRUE",
approach = "BAYES",
sp_model = "ICAR",
initial=1,
tp_prior=1,
mu_beta=0,sigma_beta=4,
mu_psi=0,sigma_psi=4,
mu_omega=0,
spatial=1,
nb_mat=RMBH_mat,
shp_tau=0.01,
scl_tau=0.01,
n_iter = 2000,
n_cores=1,
n_chains=2,
W_n=365,omega_data = 0,
bp_degree=degree_bp,
h1_gamma=0,
h2_gamma=4,
lower_tau=0,
tp_prior_tau="gamma",
tp_icar = 1,
std_dev = 1
)
summary(RESULT$result_stan, pars = c("alpha","beta","pii","tau"))
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
?spnhppzi::spnhppzi
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
devtools::document()
roxygen2::roxygenize()
devtools::document()
help(package = "spnhppzi")
help(package = "spnhppzi")
devtools::install()
help(package = "spnhppzi")
?spnhppzi
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
?spnhppzi::spsimrec
?spnhppzi::Recur
?spnhppzi::spnhppzi
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::fit_spnhppzi
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::fit_spnhppzi
