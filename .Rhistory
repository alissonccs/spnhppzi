(libs <- c("dplyr", "tidyr", "rstan","genderBR"))
(lapply(libs, require, character.only = TRUE))
#PACOTES
install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages(c("dplyr", "tidyr", "rstan", "genderBR"), repo = 'https://mac.R-project.org')
install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages("dplyr")
#PACOTES
nstall.packages("broom")
#PACOTES
install.packages("broom")
install.packages("dplyr", dependencies = FALSE)
install.packages("dplyr")
install.packages("cpp11")
(libs <- c("dplyr", "tidyr", "rstan","genderBR"))
(lapply(libs, require, character.only = TRUE))
install.packages("dplyr")
#PACOTES
# install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages("dplyr")
#PACOTES
# install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages("Rtools")
install.packages("gdplyr", dependencies=TRUE)
install.packages("dplyr", dependencies=TRUE)
#PACOTES
# install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages("dplyr")
(libs <- c("dplyr", "tidyr", "rstan","genderBR"))
(lapply(libs, require, character.only = TRUE))
#PACOTES
install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
install.packages(c("dplyr", "tidyr", "rstan", "genderBR"))
(libs <- c("dplyr", "tidyr", "rstan","genderBR"))
setwd("/home/alisson/spnhppzi")
list.files(all.files = TRUE)
file.show(file.path("R", "spnhppzi-package.R"))
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
?spnhppzi::spsimrec
?spnhppzi::spsimrec
remove.packages("spnhppzi")
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
base1<-spnhppzi::simrec_sp(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
library("spnhppzi")
library(spnhppzi)
?spnhppzi::spsimrec
?spnhppzi::spsimrec
library(rstan)
library(Formula)
library(dplyr)
library(psych)
library(splitstackshape)
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
remove.packages("spnhppzi")
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
library("spnhppzi")
library(spnhppzi)
?spnhppzi::spsimrec
?spnhppzi::spsimrec
library(rstan)
library(Formula)
library(dplyr)
library(psych)
library(splitstackshape)
base1<-spnhppzi::spsimrec(
N=1000,
fu.min=5,
fu.max=5,
#dist.x=c("binomial", "normal"),
#par.x=list(0.5, c(0, 1)),
#beta.x=c(1,1.3),
random.ef = 0,
dist.z="lognormal",
ent.dist.z=0,
mu.omega=0,
sigma.omega=1,
par.z = 1,
dist.rec="weibull",
par.rec=c(1,1.3),
cens.prob=0,
dfree=0,
pi=0,
logist=0
)
base1$IndRec<-1-base1$recurr
formula2=Formula(NHPPZISP::Recur(end,status,ID,IndRec)~1|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
formula2=Formula(spnhppzi::Recur(end,status,ID,IndRec)~1|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
Recur <- function(time, event = NULL, id = NULL, IndRec=NULL){
n <- length(time)
if(is.null(event)){
event <- rep(1, n)
}
if(is.null(id)){
id <- rep(1, n)
}
if(is.null(event)){
IndRec <- rep(2, n)
}
resp <- cbind(time, event, id, IndRec)
colnames(resp) <- c("time", "event", "id","IndRec")
return(resp)
}
formula2=Formula(Recur(end,status,ID,IndRec)~1|-1)
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
roxygen2::roxygenize()
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
roxygen2::roxygenize()
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
roxygen2::roxygenize()
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
roxygen2::roxygenize()
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
roxygen2::roxygenize()
RESULT_BAYES_SCOV1<- spnhppzi::spnhppzi(formula2,
base1,
baseline = "plp1",
FR="false",
ZI="false",
approach = "BAYES",
initial=10,
tp_prior=1,
shp_alpha1=0.1,scl_alpha1=0.1,
shp_alpha2=0.1,scl_alpha2=0.1,
mu_beta=0,sigma_beta=1,
mu_psi=0,sigma_psi=1,
mu_omega=0,
shp_sigma_omega = 1, scl_sigma_omega = 1
)
pars<- as.data.frame(RESULT_BAYES_SCOV1, pars = c("alpha"))
colnames(pars)<-c("alpha1","alpha2")
pars<-pars %>%
mutate(alpha1_1=1/alpha1)
pars_desc<-describe(pars,quant=c(.025,.5,.975),fast=TRUE)
pars_desc
pars
roxygen2::roxygenize()
?spnhppzi::Recur
rm(Recur)
?spnhppzi::Recur
roxygen2::roxygenize()
roxygen2::roxygenize()
library("spnhppzi")
# library("rstantools")
# rstan_create_package(path = '/home/alisson/spnhppzi')
# setwd("/home/alisson/spnhppzi")
# list.files(all.files = TRUE)
# file.show("DESCRIPTION")
# file.show("Read-and-delete-me")
# file.remove('Read-and-delete-me')
# file.show(file.path("R", "spnhppzi-package.R"))
example(source) # defines the sourceDir() function
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize()
install.packages("../spnhppzi", repos = NULL, type = "source")
library("spnhppzi")
?spnhppzi::spsimrec
?spnhppzi::spnhppzi
